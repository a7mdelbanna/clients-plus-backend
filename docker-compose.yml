version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: clientsplus_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: clientsplus_db
      POSTGRES_USER: clientsplus_user
      POSTGRES_PASSWORD: clientsplus_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - clientsplus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clientsplus_user -d clientsplus_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: clientsplus_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - clientsplus_network
    command: redis-server --appendonly yes --requirepass redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Application (Development)
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: clientsplus_api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://clientsplus_user:clientsplus_password@postgres:5432/clientsplus_db?schema=public
      REDIS_URL: redis://:redis_password@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-jwt-key-change-this-in-production
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - clientsplus_network
    command: npm run dev

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: clientsplus_pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@clientsplus.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - clientsplus_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  clientsplus_network:
    driver: bridge